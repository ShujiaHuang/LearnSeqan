c++: warning: couldn't understand kern.osversion '14.1.0
c++: warning: couldn't understand kern.osversion '14.1.0
ld: warning: could not create compact unwind for seqan::getBamTypeSize(char): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<unsigned char, seqan::Alloc<void> >::String(seqan::String<unsigned char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for char* seqan::toCString<char, seqan::Alloc<void> >(seqan::String<char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >, seqan::String<char, seqan::Alloc<void> > >(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<unsigned long, seqan::Alloc<void> >, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<unsigned long, seqan::Alloc<void> >, long>(seqan::String<unsigned long, seqan::Alloc<void> >&, long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::FormattedFile<seqan::Tag<seqan::Bam_>, seqan::Tag<seqan::Input_>, void>::FormattedFile(char const*, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<unsigned char, seqan::Alloc<void>, seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&, seqan::String<unsigned char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char const*>(seqan::String<char, seqan::Alloc<void> >&, char const* const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<char, seqan::Alloc<void> >::String(seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >::String(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::CigarElement<char, unsigned int> >(seqan::CigarElement<char, unsigned int>*, seqan::CigarElement<char, unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> >(seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [4]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [4]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::CigarElement<char, unsigned int>, seqan::Alloc<void> > const>::Type seqan::value<seqan::CigarElement<char, unsigned int>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::CigarElement<char, unsigned int>, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<unsigned char, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >::Type seqan::convert<unsigned char, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<unsigned char, seqan::SimpleType<unsigned char, seqan::Iupac_> >::Type seqan::convert<unsigned char, seqan::SimpleType<unsigned char, seqan::Iupac_> >(seqan::SimpleType<unsigned char, seqan::Iupac_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::ReadStoreElement<void> >(seqan::ReadStoreElement<void>*, seqan::ReadStoreElement<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::MatePairStoreElement<void> >(seqan::MatePairStoreElement<void>*, seqan::MatePairStoreElement<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::LibraryStoreElement<double, double, void> >(seqan::LibraryStoreElement<double, double, void>*, seqan::LibraryStoreElement<double, double, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void> >(seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::ContigFile<void> >(seqan::ContigFile<void>*, seqan::ContigFile<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void> >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::AnnotationStoreElement<long, void> >(seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::IntervalTree<long, unsigned int> >(seqan::IntervalTree<long, unsigned int>*, seqan::IntervalTree<long, unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::AlignQualityStoreElement<signed char, void> >(seqan::AlignQualityStoreElement<signed char, void>*, seqan::AlignQualityStoreElement<signed char, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::close<seqan::Tag<seqan::Bam_>, seqan::Tag<seqan::Input_>, void>(seqan::FormattedFile<seqan::Tag<seqan::Bam_>, seqan::Tag<seqan::Input_>, void>&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> > >(seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::Pair<int, int, void> >(seqan::Pair<int, int, void>*, seqan::Pair<int, int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::sortAlignedReads<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::SortBeginPos_>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, seqan::Tag<seqan::SortBeginPos_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::sortAlignedReads<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::SortContigId_>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, seqan::Tag<seqan::SortContigId_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> >, unsigned int>(seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> >&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<unsigned int, seqan::Alloc<void> >, unsigned int>(seqan::String<unsigned int, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >&, seqan::String<unsigned int, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::reverseComplement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::reserve<seqan::String<char, seqan::Alloc<void> >, unsigned long>(seqan::String<char, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<char, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<char, seqan::Alloc<void> > >::Type>::Type seqan::end<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<char, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<char, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void>, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void> >, int>(seqan::String<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > > >::Type seqan::resize<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >, int>(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > > >::Type seqan::resize<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >, unsigned int>(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::Tag<seqan::Default_> > >&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<unsigned long, seqan::Alloc<void> >::String(seqan::String<unsigned long, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::value<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned int, seqan::Alloc<void> > >::Type seqan::value<unsigned int, seqan::Alloc<void>, unsigned long>(seqan::String<unsigned int, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, int>(seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::value<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void>, int>(seqan::String<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void>, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >(seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >(seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<unsigned char>(unsigned char*, unsigned char*, unsigned char*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::VirtualStreamFactoryContext_<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> > >, 0>::Type seqan::tagApply<seqan::VirtualStreamFactoryContext_<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> > >, seqan::TagList<seqan::Tag<seqan::Nothing_>, void> >(seqan::VirtualStreamFactoryContext_<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::Nothing_>, void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::getChunk<seqan::Range<char const*>, seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::Input_>(seqan::Range<char const*>&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::Input_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<char const, char>(char const*, char const*, char*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void>, int>(seqan::String<seqan::AnnotationStoreElement<long, void>, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<unsigned long, seqan::Alloc<void>, seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, seqan::String<unsigned long, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [7]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [7]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::open<seqan::Tag<seqan::TagFastq_>, seqan::Tag<seqan::Input_>, void>(seqan::FormattedFile<seqan::Tag<seqan::TagFastq_>, seqan::Tag<seqan::Input_>, void>&, char const*, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<char, seqan::Alloc<void> >::String(seqan::String<char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<unsigned int, seqan::Alloc<void> >::String(seqan::String<unsigned int, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_generatePairMatchIds<void, seqan::FragmentStoreConfig<void>, seqan::String<seqan::MatchMateInfo_<unsigned int>, seqan::Alloc<void> > >(seqan::FragmentStore<void, seqan::FragmentStoreConfig<void> >&, seqan::String<seqan::MatchMateInfo_<unsigned int>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::sortAlignedReads<seqan::Segment<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::SortBeginPos_>(seqan::Segment<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Tag<seqan::SortBeginPos_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >::String(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::reverseComplement<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void> >(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >, seqan::String<char, seqan::Alloc<void> > >(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, long, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, long, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::Standard_> const>::Type seqan::iter<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, long, seqan::Standard_>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, long, seqan::Tag<seqan::Standard_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::Pair<unsigned int, unsigned int, void>, seqan::Alloc<void> >, seqan::Pair<unsigned int, unsigned int, void> >(seqan::String<seqan::Pair<unsigned int, unsigned int, void>, seqan::Alloc<void> >&, seqan::Pair<unsigned int, unsigned int, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::SimpleType<unsigned char, seqan::Dna5_> >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::SimpleType<unsigned char, seqan::Dna5_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_readToProfileAlignment<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::AlignConfig<false, true, false, true, seqan::Tag<seqan::Default_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig<false, true, false, true, seqan::Tag<seqan::Default_> > const&, int&, int&, bool): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_readToProfileAlignment<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::AlignConfig<false, false, false, true, seqan::Tag<seqan::Default_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig<false, false, false, true, seqan::Tag<seqan::Default_> > const&, int&, int&, bool): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_readToProfileAlignment<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::AlignConfig<true, false, false, false, seqan::Tag<seqan::Default_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig<true, false, false, false, seqan::Tag<seqan::Default_> > const&, int&, int&, bool): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_readToProfileAlignment<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::AlignConfig<false, false, false, false, seqan::Tag<seqan::Default_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig<false, false, false, false, seqan::Tag<seqan::Default_> > const&, int&, int&, bool): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_readToProfileAlignment<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::AlignConfig<true, false, false, true, seqan::Tag<seqan::Default_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig<true, false, false, true, seqan::Tag<seqan::Default_> > const&, int&, int&, bool): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::replace<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, unsigned int, unsigned int, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned int, unsigned int, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<unsigned char const, unsigned char>(unsigned char const*, unsigned char const*, unsigned char*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct_aux<char const*>(char const*, char const*, std::allocator<char> const&, std::__false_type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<char>(char*, char*, char*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::goFurther<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, long, seqan::Tag<seqan::Input_> >(seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char const*>(seqan::String<char, seqan::Alloc<void> >&, char const*&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >::String(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::BamHeaderRecord>(seqan::BamHeaderRecord*, seqan::BamHeaderRecord*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::TagFastq_>, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::TagFastq_>, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assignQualities<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::TagFastq_>, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::TagFastq_>, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Position<seqan::String<char, seqan::Alloc<void> > >::Type seqan::findFirst<seqan::String<char, seqan::Alloc<void> >, seqan::OrFunctor<seqan::OrFunctor<seqan::EqualsChar<(char)32>, seqan::EqualsChar<(char)9> >, seqan::OrFunctor<seqan::EqualsChar<(char)10>, seqan::EqualsChar<(char)13> > > >(seqan::String<char, seqan::Alloc<void> > const&, seqan::OrFunctor<seqan::OrFunctor<seqan::EqualsChar<(char)32>, seqan::EqualsChar<(char)9> >, seqan::OrFunctor<seqan::EqualsChar<(char)10>, seqan::EqualsChar<(char)13> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<char, seqan::Alloc<void> >, unsigned long>(seqan::String<char, seqan::Alloc<void> >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<unsigned int, seqan::Alloc<void>, seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::String<unsigned int, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<unsigned int, seqan::Alloc<void>, seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::String<unsigned int, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::MatchMateInfo_<unsigned int> >(seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::GapAnchor<long> >(seqan::GapAnchor<long>*, seqan::GapAnchor<long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::BamHeaderRecord, seqan::Alloc<void> >, seqan::BamHeaderRecord>(seqan::String<seqan::BamHeaderRecord, seqan::Alloc<void> >&, seqan::BamHeaderRecord const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<int, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<int, seqan::Alloc<void> >, unsigned long, int>(seqan::String<int, seqan::Alloc<void> >&, unsigned long, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::AlignQualityStoreElement<signed char, void>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::AlignQualityStoreElement<signed char, void>, seqan::Alloc<void> >, unsigned long, seqan::AlignQualityStoreElement<signed char, void> >(seqan::String<seqan::AlignQualityStoreElement<signed char, void>, seqan::Alloc<void> >&, unsigned long, seqan::AlignQualityStoreElement<signed char, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > > >::Type seqan::resize<seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >, unsigned long>(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> > >(seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<unsigned int, seqan::Alloc<void> >::String(seqan::String<unsigned int, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const>::Type seqan::value<seqan::GapAnchor<long>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::value<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void>, int>(seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::begin<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::end<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<char, seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > >::Type seqan::convert<char, seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > >(seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::value<unsigned long, seqan::Alloc<void>, unsigned int>(seqan::String<unsigned long, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::String<char, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > >::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > >(seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::GapAnchor<long>, seqan::Alloc<void>, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void, seqan::TagGenerous_>(seqan::StringSet<seqan::String<char, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, seqan::String<char, seqan::Alloc<void> > const&, seqan::Tag<seqan::TagGenerous_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::append<seqan::String<char, seqan::Alloc<void> >, char [11]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [11]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, long, seqan::Tag<seqan::SortSeqPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<unsigned int, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >::Type seqan::convert<unsigned int, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >(seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, int>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, unsigned long, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned long, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::DefaultGetIteratorSpec<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >::Type>::Type seqan::begin<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::DefaultGetIteratorSpec<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >::Type>::Type seqan::end<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::EnableIf<seqan::And<seqan::Is<seqan::ContainerConcept<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::IsContiguous<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > >, void>::Type seqan::write<seqan::Iter<std::basic_ostream<char, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Output_> > >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::Iter<std::basic_ostream<char, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Output_> > >&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::Pair<unsigned int, unsigned int, void> >(seqan::Pair<unsigned int, unsigned int, void>*, seqan::Pair<unsigned int, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::Standard_> const>::Type seqan::iter<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, unsigned int, seqan::Standard_>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned int, seqan::Tag<seqan::Standard_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<char, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >::Type seqan::convert<char, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >(seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::reserve<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::append<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::PrefixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::PrefixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, seqan::Tag<seqan::Standard_> const>::Type seqan::iter<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >, int, seqan::Standard_>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, int, seqan::Tag<seqan::Standard_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::append<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::SuffixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::SuffixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::Pair<unsigned int, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::Pair<unsigned int, unsigned int, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::Pair<unsigned int, unsigned int, void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, unsigned int>(seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insertGaps<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, unsigned int>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > const&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<unsigned char, seqan::Alloc<void> >, seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&, seqan::String<unsigned char, seqan::Alloc<void> > const&, seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::operator< <char, seqan::Alloc<void>, seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> > const&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<unsigned long>(unsigned long*, unsigned long*, unsigned long*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char const*>(seqan::String<char, seqan::Alloc<void> >&, char const* const&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::SimpleType<unsigned char, seqan::Dna5Q_> const, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const*, seqan::SimpleType<unsigned char, seqan::Dna5Q_> const*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::getChunk<seqan::Range<char*>, seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::Input_>(seqan::Range<char*>&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::Input_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void>, seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::BamHeaderRecord>(seqan::BamHeaderRecord*, seqan::BamHeaderRecord*, seqan::BamHeaderRecord*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [4]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [4], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::AnnotationStoreElement<long, void> >(seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::_Resize_String<seqan::Tag<seqan::TagGenerous_> >::resize_<seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void> >(seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::TagFasta_>, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<int>(int*, int*, int*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> >(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<int, seqan::Alloc<void> > >::Type seqan::value<int, seqan::Alloc<void>, unsigned long>(seqan::String<int, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::StringSet<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::StringSet<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::EnableIf<seqan::Is<seqan::IntegerConcept<unsigned char> >, bool>::Type seqan::extractTagValue<unsigned char, int>(unsigned char&, seqan::BamTagsDict const&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::MatchMateInfo_<unsigned int>, seqan::Alloc<void> >, seqan::MatchMateInfo_<unsigned int> >(seqan::String<seqan::MatchMateInfo_<unsigned int>, seqan::Alloc<void> >&, seqan::MatchMateInfo_<unsigned int> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >(seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insertGaps<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long long>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > const&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insertGaps<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long long>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > const&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_without_buffer<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortBeginPos_> const> > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortBeginPos_> const> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_adaptive<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortBeginPos_> const> > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortBeginPos_> const> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_without_buffer<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortContigId_> const> > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortContigId_> const> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_adaptive<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortContigId_> const> > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::_LessAlignedRead<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>, seqan::Tag<seqan::SortContigId_> const> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::SimpleType<unsigned char, seqan::Dna5Q_> const, char>(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const*, seqan::SimpleType<unsigned char, seqan::Dna5Q_> const*, char*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, int>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, int, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, unsigned long>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, void, seqan::TagGenerous_>(seqan::StringSet<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > const&, seqan::Tag<seqan::TagGenerous_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const>::Type seqan::value<seqan::GapAnchor<long>, seqan::Alloc<void>, int>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const>::Type seqan::value<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<unsigned int, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >::Type seqan::convert<unsigned int, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<unsigned int, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >::Type seqan::convert<unsigned int, seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > >(seqan::Proxy<seqan::IteratorProxy<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::_removeGap2<long, seqan::GapAnchor<long>, void, unsigned int>(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<int, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<int, seqan::Alloc<void> >, unsigned long>(seqan::String<int, seqan::Alloc<void> >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::begin<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::end<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::end<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<unsigned long, seqan::Alloc<void> >, int, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insert<seqan::String<unsigned long, seqan::Alloc<void> >, unsigned long, seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, unsigned long, seqan::String<unsigned long, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<unsigned long, seqan::Alloc<void> >, unsigned long, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, unsigned long, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insertGaps<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, unsigned int>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > const&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for int seqan::insertGap<long, seqan::GapAnchor<long>, void, unsigned int>(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned int, seqan::Alloc<void> > >::Type seqan::value<unsigned int, seqan::Alloc<void>, unsigned int>(seqan::String<unsigned int, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::removeGap<long, seqan::GapAnchor<long>, void, unsigned int>(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for int seqan::resizeSpace<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, int, unsigned int, unsigned int>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, int, unsigned int, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> > const&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> >(seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::GetBamTypeSizeHelper_, unsigned char, seqan::TagList<signed char, void> >(seqan::GetBamTypeSizeHelper_&, seqan::TagList<unsigned char, seqan::TagList<signed char, void> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::operator< <seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::operator< <seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment, seqan::String<char, seqan::Alloc<void> > >(seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::operator< <char, seqan::Alloc<void>, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::String<char, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [10]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [10]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [5]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [5]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [15]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [15]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<char, seqan::Alloc<void>, char [16]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [16]): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> > const>::Type seqan::value<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::TagFasta_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::Embl_>, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::_Resize_String<seqan::Tag<seqan::TagGenerous_> >::resize_<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<unsigned int>(unsigned int*, unsigned int*, unsigned int*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type seqan::value<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::CigarElement<char, unsigned int>, seqan::Alloc<void> >, seqan::CigarElement<char, unsigned int> >(seqan::String<seqan::CigarElement<char, unsigned int>, seqan::Alloc<void> >&, seqan::CigarElement<char, unsigned int> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void>, seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::MatePairStoreElement<void>, seqan::Alloc<void> >, seqan::MatePairStoreElement<void> >(seqan::String<seqan::MatePairStoreElement<void>, seqan::Alloc<void> >&, seqan::MatePairStoreElement<void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::insertGaps<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, unsigned int>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > > const&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, void, seqan::TagGenerous_>(seqan::StringSet<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::Owner<seqan::ConcatDirect<void> > >&, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, seqan::Tag<seqan::TagGenerous_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ReadStoreElement<void>, seqan::Alloc<void> > >::Type seqan::value<seqan::ReadStoreElement<void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::ReadStoreElement<void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ReadStoreElement<void>, seqan::Alloc<void> > const>::Type seqan::value<seqan::ReadStoreElement<void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::ReadStoreElement<void>, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long long>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long long>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >, long long>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::rotate<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*>(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> > >(seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >*, seqan::String<unsigned int, seqan::Alloc<void> >*, seqan::String<unsigned int, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >*, seqan::String<unsigned int, seqan::Alloc<void> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >::Type seqan::convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, unsigned long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::GapAnchor<long> >(seqan::GapAnchor<long>*, seqan::GapAnchor<long>*, seqan::GapAnchor<long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::value<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::getChunk<seqan::Range<char*>, std::basic_ostream<char, std::char_traits<char> >, seqan::Output_>(seqan::Range<char*>&, seqan::Iter<std::basic_ostream<char, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Output_> > >&, seqan::Tag<seqan::Output_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::advanceChunk<std::basic_ostream<char, std::char_traits<char> >, seqan::Tag<seqan::Output_>, unsigned long>(seqan::Iter<std::basic_ostream<char, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Output_> > >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::end<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, unsigned int>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, unsigned int, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::resize<seqan::String<unsigned long, seqan::Alloc<void> >, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >::Type seqan::value<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment, unsigned long>(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::value<unsigned long, seqan::Alloc<void>, unsigned long>(seqan::String<unsigned long, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::value<unsigned long, seqan::Alloc<void>, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::Tag<seqan::Standard_> const>::Type seqan::lowerBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, int>(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> const*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::AnnotationStoreElement<long, void> >(seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<unsigned long, seqan::Alloc<void> >, seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, seqan::String<unsigned long, seqan::Alloc<void> > const&, seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [7]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [7], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::ContigFile<void> >(seqan::ContigFile<void>*, seqan::ContigFile<void>*, seqan::ContigFile<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void> >(seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::Embl_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::Embl_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::GenBank_>, seqan::TagList<seqan::Tag<seqan::Raw_>, void> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<unsigned int const, unsigned int>(unsigned int const*, unsigned int const*, unsigned int*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<int, int>(int*, int*, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::AlignQualityStoreElement<signed char, void>, seqan::AlignQualityStoreElement<signed char, void> >(seqan::AlignQualityStoreElement<signed char, void>*, seqan::AlignQualityStoreElement<signed char, void>*, seqan::AlignQualityStoreElement<signed char, void> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<char, seqan::Alloc<void> > const>::Type seqan::value<char, seqan::Alloc<void>, unsigned long>(seqan::String<char, seqan::Alloc<void> > const&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<char, seqan::Alloc<void> > >::Type seqan::value<char, seqan::Alloc<void>, unsigned long>(seqan::String<char, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::MatePairStoreElement<void>, seqan::Alloc<void> > >::Type seqan::value<seqan::MatePairStoreElement<void>, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::MatePairStoreElement<void>, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for int seqan::resizeSpace<seqan::String<char, seqan::Alloc<void> >, int, unsigned long, unsigned long>(seqan::String<char, seqan::Alloc<void> >&, int, unsigned long, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for int seqan::resizeSpace<seqan::String<unsigned long, seqan::Alloc<void> >, int, int, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int, int, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::Segment<seqan::String<char, seqan::Alloc<void> > const, seqan::InfixSegment> >::Type seqan::value<seqan::String<char, seqan::Alloc<void> > const, seqan::InfixSegment, int>(seqan::Segment<seqan::String<char, seqan::Alloc<void> > const, seqan::InfixSegment>&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct<char*>(char*, char*, std::allocator<char> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>&, seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, long long>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, long long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >::Type>::Type seqan::iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, long long>(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >&, long long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>, long long>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&, long long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::GapAnchor<long>, seqan::Alloc<void>, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::GapAnchor<long> const, seqan::GapAnchor<long> >(seqan::GapAnchor<long> const*, seqan::GapAnchor<long> const*, seqan::GapAnchor<long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::TraceSegment_<unsigned long, unsigned long> >(seqan::TraceSegment_<unsigned long, unsigned long>*, seqan::TraceSegment_<unsigned long, unsigned long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > const, seqan::DefaultGetIteratorSpec<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > >::Type>::Type seqan::end<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > >(seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > const, seqan::DefaultGetIteratorSpec<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > >(seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::begin<seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Tag<seqan::ArrayGaps_> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::DefaultGetIteratorSpec<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >::Type>::Type seqan::begin<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> > >(seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Value<seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, 0>::Type seqan::_setUpAndRunAlignment<int, seqan::Tag<seqan::Default_>, seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPContext<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::DPScoutState_<seqan::Tag<seqan::Default_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::AlignConfig2<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > const, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type>::Type seqan::iter<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, unsigned int>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, unsigned int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> > >::Type seqan::value<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::String<char, seqan::Alloc<void> >, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> const, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> >(seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> const*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> const*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::IntervalTreeNode<seqan::IntervalAndCargo<long, unsigned int>, seqan::StorePointsOnly> >(seqan::IntervalTreeNode<seqan::IntervalAndCargo<long, unsigned int>, seqan::StorePointsOnly>*, seqan::IntervalTreeNode<seqan::IntervalAndCargo<long, unsigned int>, seqan::StorePointsOnly>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::Embl_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::GenBank_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::GenBank_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >, seqan::TagList<seqan::Tag<seqan::Raw_>, void> >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<char, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::TagSelector<seqan::TagList<seqan::Tag<seqan::Raw_>, void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::String<unsigned int, seqan::Alloc<void> > const&, seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagExact_> >::_clearSpace_<seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >&, seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<unsigned long, unsigned long>(unsigned long*, unsigned long*, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<char, seqan::Alloc<void> >, char>(seqan::String<char, seqan::Alloc<void> >&, char const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<int, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, long>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for char* std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_without_buffer<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::LessConvertPairWiseToGlobalAlignment<seqan::FragmentStore<void, seqan::FragmentStoreConfig<void> > > > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::LessConvertPairWiseToGlobalAlignment<seqan::FragmentStore<void, seqan::FragmentStoreConfig<void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__merge_adaptive<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::LessConvertPairWiseToGlobalAlignment<seqan::FragmentStore<void, seqan::FragmentStoreConfig<void> > > > >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, long, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, long, __gnu_cxx::__ops::_Iter_comp_iter<seqan::LessConvertPairWiseToGlobalAlignment<seqan::FragmentStore<void, seqan::FragmentStoreConfig<void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >, int>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_goToGapAnchorIterator<seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >, int>(seqan::Iter<seqan::Gaps<seqan::Tag<seqan::Nothing_>, seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > >, seqan::GapsIterator<seqan::AnchorGaps<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> > > >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const>::Type seqan::value<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment, int>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, unsigned int>::Type seqan::convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, unsigned int>(unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, char>::Type seqan::convert<seqan::ModifiedAlphabet<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::ModExpand<(char)45, seqan::Tag<seqan::Default_> > >, char>(char const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<char, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >::Type seqan::convert<char, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Dna5Q_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void> >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::InfixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::Pair<unsigned int, unsigned int, void> >(seqan::Pair<unsigned int, unsigned int, void>*, seqan::Pair<unsigned int, unsigned int, void>*, seqan::Pair<unsigned int, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::PrefixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::PrefixSegment> const&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::SuffixSegment> >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Segment<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::SuffixSegment> const&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > const>::Type seqan::value<unsigned long, seqan::Alloc<void>, unsigned long>(seqan::String<unsigned long, seqan::Alloc<void> > const&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<unsigned long, int>(unsigned long*, unsigned long*, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type>::Type seqan::iter<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, int>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type seqan::value<seqan::GapAnchor<long>, seqan::Alloc<void>, int>(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<unsigned char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >, seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::BamHeaderRecord*, seqan::BamHeaderRecord>(seqan::BamHeaderRecord*, seqan::BamHeaderRecord&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>*>(seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>**, seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>**): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::readRecord<seqan::String<char, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > > >(seqan::String<char, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Iter<seqan::VirtualStream<char, seqan::Tag<seqan::Input_>, std::char_traits<char> >, seqan::StreamIterator<seqan::Tag<seqan::Input_> > >&, seqan::Tag<seqan::GenBank_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_setLength<char, 2ul, int>(seqan::String<char, seqan::Array<2ul> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> > >(seqan::String<char, seqan::Alloc<void> >*, seqan::String<char, seqan::Alloc<void> >&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_copyCargo<seqan::ModifiedIterator<char const*, seqan::ModView<seqan::FunctorLowcase<char const, char const> > >, seqan::ModifiedString<char const* const, seqan::ModView<seqan::FunctorLowcase<char const, char const> > > const>(seqan::ModifiedIterator<char const*, seqan::ModView<seqan::FunctorLowcase<char const, char const> > >&, seqan::ModifiedString<char const* const, seqan::ModView<seqan::FunctorLowcase<char const, char const> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::AlignQualityStoreElement<signed char, void> >(seqan::AlignQualityStoreElement<signed char, void>*, seqan::AlignQualityStoreElement<signed char, void>*, seqan::AlignQualityStoreElement<signed char, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<char, seqan::Alloc<void> > >::Type seqan::value<char, seqan::Alloc<void>, int>(seqan::String<char, seqan::Alloc<void> >&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<unsigned int, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::SimpleType<unsigned char, seqan::Iupac_> const, seqan::SimpleType<unsigned char, seqan::Dna5Q_> >(seqan::SimpleType<unsigned char, seqan::Iupac_> const*, seqan::SimpleType<unsigned char, seqan::Iupac_> const*, seqan::SimpleType<unsigned char, seqan::Dna5Q_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::compare_<unsigned long, seqan::Segment<seqan::String<char, seqan::Alloc<void> > const, seqan::InfixSegment> const, char const*>(seqan::Lexical<unsigned long>&, seqan::Segment<seqan::String<char, seqan::Alloc<void> > const, seqan::InfixSegment> const&, char const*&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<char, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<char, seqan::Alloc<void> > >::Type>::Type seqan::iter<seqan::String<char, seqan::Alloc<void> >, unsigned long>(seqan::String<char, seqan::Alloc<void> >&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<unsigned long, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<unsigned long, seqan::Alloc<void> > >::Type>::Type seqan::iter<seqan::String<unsigned long, seqan::Alloc<void> >, int>(seqan::String<unsigned long, seqan::Alloc<void> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__make_heap<seqan::MatchMateInfo_<unsigned int>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::MatchMateInfoLess_> >(seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::MatchMateInfoLess_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void std::__pop_heap<seqan::MatchMateInfo_<unsigned int>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::MatchMateInfoLess_> >(seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*, __gnu_cxx::__ops::_Iter_comp_iter<seqan::MatchMateInfoLess_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>, int>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&, int, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::Tag<seqan::Standard_> const>::Type seqan::upperBoundGapAnchor<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>, long>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&, long, seqan::Tag<seqan::SortGapPos_>): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const>::Type seqan::value<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment, unsigned long>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment> const&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::ReadStoreElement<void> >(seqan::ReadStoreElement<void>*, seqan::ReadStoreElement<void>*, seqan::ReadStoreElement<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > const>::Type seqan::value<unsigned long, seqan::Alloc<void>, int>(seqan::String<unsigned long, seqan::Alloc<void> > const&, int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::resize<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > >(seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::resize<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >(seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::resize<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > >(seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeUnbandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeBandedAlignment<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> >, seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::DPBandConfig<seqan::Tag<seqan::BandOff_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void> >(seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>*, seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::compare_<unsigned long, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const>(seqan::Lexical<unsigned long>&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::compare_<unsigned long, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const, seqan::String<char, seqan::Alloc<void> > const>(seqan::Lexical<unsigned long>&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&, seqan::String<char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::compare_<unsigned long, seqan::String<char, seqan::Alloc<void> > const, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const>(seqan::Lexical<unsigned long>&, seqan::String<char, seqan::Alloc<void> > const&, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [10]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [10], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [5]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [5], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [15]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [15], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<char, seqan::Alloc<void> >, char [16]>(seqan::String<char, seqan::Alloc<void> >&, char const (&) [16], seqan::Size<seqan::String<char, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type seqan::reserve<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_setLength<char, 20ul, int>(seqan::String<char, seqan::Array<20ul> >&, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_copyCargo<seqan::ModifiedIterator<char const*, seqan::ModView<seqan::FunctorLowcase<char const, char const> > >, seqan::ModifiedString<seqan::Segment<char const*, seqan::PrefixSegment> const, seqan::ModView<seqan::FunctorLowcase<char const, char const> > > const>(seqan::ModifiedIterator<char const*, seqan::ModView<seqan::FunctorLowcase<char const, char const> > >&, seqan::ModifiedString<seqan::Segment<char const*, seqan::PrefixSegment> const, seqan::ModView<seqan::FunctorLowcase<char const, char const> > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type seqan::reserve<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >, unsigned long>(seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<float, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >, seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >&, seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::MatchMateInfo_<unsigned int> >(seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*, seqan::MatchMateInfo_<unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> > >(seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >*, seqan::String<seqan::String<unsigned int, seqan::Alloc<void> >, seqan::Alloc<void> >&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::String<unsigned int, seqan::Alloc<void> >*, seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >*, seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<unsigned long, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<unsigned long, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_setToPosition<unsigned char, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > >, unsigned int>(seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeTrack<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Tag<seqan::SparseDPMatrix_> >, seqan::Tag<seqan::DPScoreMatrix_>, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Iter<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::AdaptorIterator<seqan::SimpleType<unsigned char, seqan::Dna5Q_>*, seqan::Tag<seqan::Default_> > > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void> >(seqan::AnnotationStoreElement<long, void>*, seqan::AnnotationStoreElement<long, void>&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned long, seqan::Alloc<void> > >(seqan::String<unsigned long, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<unsigned long, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::ContigFile<void>*, seqan::ContigFile<void> >(seqan::ContigFile<void>*, seqan::ContigFile<void>&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void> >(seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>*, seqan::ContigStoreElement<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::GapAnchor<long>, void>&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_setLength<char, 2ul, long>(seqan::String<char, seqan::Array<2ul> >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::CigarElement<char, unsigned int> >(seqan::CigarElement<char, unsigned int>*, seqan::CigarElement<char, unsigned int>*, seqan::CigarElement<char, unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::SimpleType<unsigned char, seqan::Iupac_> >::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::SimpleType<unsigned char, seqan::Iupac_> >(seqan::SimpleType<unsigned char, seqan::Iupac_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<short, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::MatePairStoreElement<void> >(seqan::MatePairStoreElement<void>*, seqan::MatePairStoreElement<void>*, seqan::MatePairStoreElement<void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>(seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>&, seqan::Segment<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >, seqan::InfixSegment>&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, unsigned int>::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, unsigned int>(unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >::String(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<unsigned char, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<unsigned char, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >, seqan::DefaultGetIteratorSpec<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::True, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::False, seqan::False, seqan::False, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::LinearGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::LinearGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::FullColumn_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInitialColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPInnerColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnTop_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::FirstCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::FirstCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> >, seqan::Tag<seqan::LastCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnMiddle_> > const&, seqan::Tag<seqan::LastCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_computeCell<seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >, int, seqan::Tag<seqan::AffineGaps_>, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> >, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > >, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> >, seqan::Tag<seqan::InnerCell_>, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > >(seqan::DPScout_<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::If<seqan::HasTerminationCriterium_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> > >, seqan::Terminator_<void>, seqan::Tag<seqan::Default_> > >&, seqan::DPMatrixNavigator_<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, seqan::DPTraceMatrix<seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > >, seqan::Tag<seqan::NavigateColumnWise_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const&, seqan::ConsensusScoreSequenceEntry<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > > const&, seqan::ConsensusScoreSequenceEntry<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> > const&, seqan::Score<int, seqan::WeightedConsensusScore<seqan::Score<int, seqan::Tag<seqan::ProfileSeqFracScore_> >, seqan::Score<int, seqan::Tag<seqan::ProfileSeqScore_> > > > const&, seqan::MetaColumnDescriptor<seqan::Tag<seqan::DPFinalColumn_>, seqan::Tag<seqan::PartialColumnBottom_> > const&, seqan::Tag<seqan::InnerCell_> const&, seqan::DPProfile_<seqan::GlobalAlignment_<seqan::FreeEndGaps_<seqan::True, seqan::False, seqan::True, seqan::False> >, seqan::Tag<seqan::AffineGaps_>, seqan::TracebackOn<seqan::TracebackConfig_<seqan::Tag<seqan::SingleTrace_>, seqan::Tag<seqan::GapsLeft_> > > > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::_setLength<char, 20ul, long>(seqan::String<char, seqan::Array<20ul> >&, long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<unsigned int, seqan::Alloc<void> > >(seqan::String<unsigned int, seqan::Alloc<void> >&, seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<unsigned int, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<char, seqan::Alloc<void> >, unsigned char>(seqan::String<char, seqan::Alloc<void> >&, unsigned char const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<unsigned short, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::ExtractTagValueHelper_<unsigned char, char const*>, unsigned char, seqan::TagList<signed char, void> >(seqan::ExtractTagValueHelper_<unsigned char, char const*>&, seqan::TagList<unsigned char, seqan::TagList<signed char, void> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >(seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::GapAnchor<long>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::ValueConstructor_::construct<seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void> >(seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>*, seqan::AlignedReadStoreElement<long, seqan::GapAnchor<long>, void>&, seqan::Tag<seqan::Move_> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > >(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> >&, seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Position<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> > >::Type seqan::position<seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> >, unsigned char*>(unsigned char* const&, seqan::DPMatrix_<unsigned char, seqan::Tag<seqan::FullDPMatrix_> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::appendValue<seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >, seqan::TraceSegment_<unsigned long, unsigned long> >(seqan::String<seqan::TraceSegment_<unsigned long, unsigned long>, seqan::Alloc<void> >&, seqan::TraceSegment_<unsigned long, unsigned long> const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstruct<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayMoveForward<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayMoveBackward<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void> >(seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*, seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >(seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::Pair<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >, void>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>*, seqan::Alloc<void> > >::Type seqan::value<seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>*, seqan::Alloc<void>, unsigned int>(seqan::String<seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>*, seqan::Alloc<void> >&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::deallocate<seqan::Allocator<seqan::SinglePool<16ul, seqan::Allocator<seqan::SimpleAlloc<seqan::Tag<seqan::Default_> > > > >, seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>, int>(seqan::Allocator<seqan::SinglePool<16ul, seqan::Allocator<seqan::SimpleAlloc<seqan::Tag<seqan::Default_> > > > >&, seqan::EdgeStump<void, true, false, false, seqan::Tag<seqan::WithoutEdgeId_> const>*, int): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::SimpleType<unsigned char, seqan::Iupac_> >(seqan::SimpleType<unsigned char, seqan::Iupac_>*, seqan::SimpleType<unsigned char, seqan::Iupac_>*, seqan::SimpleType<unsigned char, seqan::Iupac_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<char, seqan::TagList<unsigned char, seqan::TagList<signed char, void> > >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::SimpleType<unsigned char, seqan::Iupac_> const, seqan::SimpleType<unsigned char, seqan::Iupac_> >(seqan::SimpleType<unsigned char, seqan::Iupac_> const*, seqan::SimpleType<unsigned char, seqan::Iupac_> const*, seqan::SimpleType<unsigned char, seqan::Iupac_>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Convert<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, char>::Type seqan::convert<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, char>(char const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<unsigned long, seqan::Alloc<void> > const>::Type seqan::value<unsigned long, seqan::Alloc<void>, unsigned int>(seqan::String<unsigned long, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<bool, seqan::Alloc<void> > const>::Type seqan::value<bool, seqan::Alloc<void>, unsigned int>(seqan::String<bool, seqan::Alloc<void> > const&, unsigned int const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>, unsigned char, seqan::TagList<signed char, void> >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, char*>&, seqan::TagList<unsigned char, seqan::TagList<signed char, void> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for bool seqan::tagApply<seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>, unsigned char, seqan::TagList<signed char, void> >(seqan::AppendTagsSamToBamOneTagHelper_<seqan::String<char, seqan::Alloc<void> >, seqan::String<char, seqan::Alloc<void> >&>&, seqan::TagList<unsigned char, seqan::TagList<signed char, void> >): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Iterator<seqan::String<unsigned char, seqan::Alloc<void> > const, seqan::DefaultGetIteratorSpec<seqan::String<unsigned char, seqan::Alloc<void> > >::Type>::Type seqan::begin<seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayMoveForward<seqan::GapAnchor<long> >(seqan::GapAnchor<long>*, seqan::GapAnchor<long>*, seqan::GapAnchor<long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayMoveBackward<seqan::GapAnchor<long> >(seqan::GapAnchor<long>*, seqan::GapAnchor<long>*, seqan::GapAnchor<long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayDestruct<seqan::PointAndCargo<long, unsigned int> >(seqan::PointAndCargo<long, unsigned int>*, seqan::PointAndCargo<long, unsigned int>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void>, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<unsigned char, seqan::Alloc<void>, seqan::String<unsigned char, seqan::Alloc<void> > >(seqan::String<unsigned char, seqan::Alloc<void> >&, seqan::String<unsigned char, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<int, seqan::Alloc<void> > const>::Type seqan::value<int, seqan::Alloc<void>, unsigned long>(seqan::String<int, seqan::Alloc<void> > const&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void>, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >(seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::SimpleType<unsigned char, seqan::Iupac_>, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const>::Type seqan::value<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment, unsigned long>(seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5Q_>, seqan::Alloc<void> >, seqan::InfixSegment> const&, unsigned long): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Reference<seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const>::Type seqan::value<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void>, unsigned long>(seqan::String<seqan::ProfileChar<seqan::SimpleType<unsigned char, seqan::Dna5_>, unsigned int, void>, seqan::Alloc<void> > const&, unsigned long const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void>, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructMove<seqan::TraceSegment_<unsigned long, unsigned long> >(seqan::TraceSegment_<unsigned long, unsigned long>*, seqan::TraceSegment_<unsigned long, unsigned long>*, seqan::TraceSegment_<unsigned long, unsigned long>*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void>, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> > const*, seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >::String(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::arrayConstructCopy<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > >(seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> > const*, seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >*): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >::String(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > const&): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for void seqan::assign<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&, seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > const&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::LinearGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
ld: warning: could not create compact unwind for seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type seqan::ClearSpaceExpandStringBase_<seqan::Tag<seqan::TagGenerous_> >::_clearSpace_<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >(seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> >&, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type, seqan::Size<seqan::String<seqan::DPCell_<int, seqan::Tag<seqan::AffineGaps_> >, seqan::Alloc<void> > >::Type): dwarf uses DW_CFA_GNU_args_size
